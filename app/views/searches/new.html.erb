<% content_for :page_title, "New Search" %>

<h1>Phylogatr</h1>
<p class="lead"><strong>phylo</strong>geographic data aggre<strong>gat</strong>ion and <strong>r</strong>epurposing</p>

<h2>New Search</h2>

<h3>Step 1: Specify location constraint</h3>

<div class="row">
<%= bootstrap_form_tag url: searches_path, method: :post do |f| %>
  <div class="col-xs-12 col-md-6">
    <div id="mapid" style="height: 400px"></div>
  </div>
  <div class="col-xs-12 col-md-4">
    <%= f.text_field :southwest_corner_latitude %>
    <%= f.text_field :southwest_corner_longitude %>
    <%= f.text_field :northeast_corner_latitude %>
    <%= f.text_field :northeast_corner_longitude %>
  </div>

 </div>

  <script>
var map = L.map('mapid').setView([51.505, -0.09], 1);
  L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
          attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
  }).addTo(map);

  var drawnItems = new L.FeatureGroup().addTo(map);

  var drawControl = new L.Control.Draw({
    edit: {
      featureGroup: drawnItems,
      remove: true
    },
    draw: {
      circle: false,
      circlemarker: false,
      marker: false,
      polyline: false,
      polygon: false
    }
  });
  map.addControl(drawControl);

  // https://github.com/Leaflet/Leaflet.draw/issues/315
  var drawControlEditOnly = new L.Control.Draw({
    edit: {
      featureGroup: drawnItems
    },
    draw: false
  });

  // enable or disable rectangle drawing based on
  // whether or not there is a rectangle
  var updateDrawControlVisibility = function(){
    if(drawnItems.getLayers().length > 0){
      drawControl.remove();
      drawControlEditOnly.addTo(map);
    }
    else{
      drawControlEditOnly.remove();
      drawControl.addTo(map);
    }
  };

  var updateMapWithFormValues = function(){
    //TODO: this is for initializing the map with form values on validation error
  }

  var updateFormValuesWithMap = function(){
    var north = "", south = "", east = "", west = "";
    if(drawnItems.getLayers().length > 0){
      let bounds = drawnItems.getLayers()[0].getBounds();

      // lat
      north = bounds.getNorth();
      south = bounds.getSouth();

      // lng
      east = bounds.getEast();
      west = bounds.getWest();
    }

    $('input#northeast_corner_latitude').val(north);
    $('input#southwest_corner_latitude').val(south);

    $('input#northeast_corner_longitude').val(east);
    $('input#southwest_corner_longitude').val(west);
  }

  // FIXME: the problem with this and why you need update
  // visibility instead is that
  // we need to initialize the form with selection after a form validation error
  map.on('draw:created', function(e){
    drawnItems.addLayer(e.layer);
    updateDrawControlVisibility();
    updateFormValuesWithMap();
  });

  map.on('draw:deleted', function(e){
    drawnItems.removeLayer(e.layer);
    updateDrawControlVisibility();
    updateFormValuesWithMap();
  });

  map.on('draw:edited', function(e){
    updateDrawControlVisibility();
    updateFormValuesWithMap();
  });
  </script>


<div class="row">
  <div class="col-xs-12 col-md-12">
    <h3>Step 2: Specify taxonomic constraint</h3>

    <% %w(kingdom phylum class order family genus species).each_with_index do |taxon, index| %>
      <%= hidden_field_tag :"taxon_#{taxon}", "", :id => "taxon#{index}" %>
    <% end %>
    <p>Click the taxon to select it as a constraint for the search. If you select multiple, it will filter the table.</p>
    <br>
    <%= render partial: 'taxonomy_control', locals: { json_url: ENV['RAILS_RELATIVE_URL_ROOT'] + '/taxon.tsv.json' } %>
  </div>
</div>

<hr>
  <%= f.submit "Submit Search", class: "btn btn-primary btn-lg" %>
<% end %>
